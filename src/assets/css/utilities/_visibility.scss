/*------------------------------------*\
    #VISIBILITY
\*------------------------------------*/

/**
  * Specify the visibility of elements by showing and hiding.
  * It's best practice to swap the hide and show classes
  * rather than use them concurrently, as this will cause issues
  */

/**
  * Visibility utilities
  * Note: Deprecated .visible-xs, .visible-sm, .visible-md, and .visible-lg as of v3.2.0
  */

// .visible-xs,
// .visible-sm,
// .visible-md,
// .visible-lg {
//   @include responsive-invisibility();
// }

.visible-xs-flex,
.visible-xs-block,
.visible-xs-inline,
.visible-xs-inline-block,
.visible-sm-flex,
.visible-sm-block,
.visible-sm-inline,
.visible-sm-inline-block,
.visible-md-flex,
.visible-md-block,
.visible-md-inline,
.visible-md-inline-block,
.visible-lg-flex,
.visible-lg-block,
.visible-lg-inline,
.visible-lg-inline-block {
  display: none !important;
}

// .visible-xs {
//   @media (max-width: $screen-xs-max) {
//     @include responsive-visibility();
//   }
// }

.visible-xs-flex {
  @media (max-width: $screen-xs-max) {
    display: flex !important;
  }
}

.visible-xs-block {
  @media (max-width: $screen-xs-max) {
    display: block !important;
  }
}

.visible-xs-inline {
  @media (max-width: $screen-xs-max) {
    display: inline !important;
  }
}

.visible-xs-inline-block {
  @media (max-width: $screen-xs-max) {
    display: inline-block !important;
  }
}

// .visible-sm {
//   @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
//     @include responsive-visibility();
//   }
// }

.visible-sm-flex {
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    display: flex !important;
  }
}

.visible-sm-block {
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    display: block !important;
  }
}

.visible-sm-inline {
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    display: inline !important;
  }
}

.visible-sm-inline-block {
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    display: inline-block !important;
  }
}

// .visible-md {
//   @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
//     @include responsive-visibility();
//   }
// }

.visible-md-flex {
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    display: flex !important;
  }
}

.visible-md-block {
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    display: block !important;
  }
}

.visible-md-inline {
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    display: inline !important;
  }
}

.visible-md-inline-block {
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    display: inline-block !important;
  }
}

// .visible-lg {
//   @media (min-width: $screen-lg-min) {
//     @include responsive-visibility();
//   }
// }

.visible-lg-flex {
  @media (min-width: $screen-lg-min) {
    display: flex !important;
  }
}

.visible-lg-block {
  @media (min-width: $screen-lg-min) {
    display: block !important;
  }
}

.visible-lg-inline {
  @media (min-width: $screen-lg-min) {
    display: inline !important;
  }
}

.visible-lg-inline-block {
  @media (min-width: $screen-lg-min) {
    display: inline-block !important;
  }
}

/**
  * Invisibility utilities
  */

.hidden-xs {
  @media (max-width: $screen-xs-max) {
    @include responsive-invisibility();
  }
}

.hidden-sm {
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    @include responsive-invisibility();
  }
}

.hidden-md {
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    @include responsive-invisibility();
  }
}

.hidden-lg {
  @media (min-width: $screen-lg-min) {
    @include responsive-invisibility();
  }
}
